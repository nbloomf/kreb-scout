[define >doc @chain.poly.1 := Macro(doc; [#

[define int @a := Rand(Range(2;7))]#
[define int @b := Rand(Range(2;7))]#
[define int @c := Rand(Range(2;7))]#
[define int @e := Rand(Range(4;7))]#

Compute the derivative of the following function. \#[ f(x) = (@a x^2 + @b x + @c)^{@e} \#]

[if (@show.solution) then [#
\textbf{Solution:} This $f$ is a polynomial, so in principle we could expand $f$ and differentiate term by term. However, computing the @e# th power of a polynomial is not fun. Note that if we let $g(x) = @a x^2 + @b x + @c$ and $h(x) = x^{@e}$, then $f = h \circ g$. Using the chain rule, we then have
\begin{eqnarray*}
\frac{d}{dx}\left(f(x)\right) & = & \frac{d}{dx}\left( (h \circ g)(x) \right) \\
 & = & h^\prime(g(x)) g^\prime(x) \\
 & = & h^\prime(@a x^2 + @b x + @c) ([:int: 2 * @a :]x + @b) \\
 & = & \boxed{@e(@a x^2 + @b x + @c)^{[:int: @e - 1 :]} ([:int: 2 * @a :]x + @b)} \\
\end{eqnarray*}
] else []
endif]

  ]; bool @show.solution := #f
)]#



[define >doc @chain.root.1 := Macro(doc; [#

[define int @a := Rand(Range(2;7))]#
[define int @b := Rand(Range(2;7))]#
[define int @r := Rand({2;3;4})]#

Compute the derivative of the following function. \#[ f(x) = \sqrt#[@r#]{x^3 + @a x - @b} \#]

[if (@show.solution) then [#
\textbf{Hint:} Use the chain rule.
] else []
endif]

  ]; bool @show.solution := #f
)]#



[define >doc @chain.sin.1 := Macro(doc; [#

[define int @a := Rand(Range(2;5))]#
[define int @b := Rand(Range(2;5))]#
[define int @c := Rand(Range(2;5))]#

Compute the derivative of the following function. \#[ f(x) = \sin(@a x^2 + @b x + @c) \#]


[if (@show.solution) then [#
\textbf{Solution:} We can think of $f$ as the composite of two simpler functions. In particular, $f = g \circ h$ where $g(x) = \sin(x)$ and $h(x) = @a x^2 + @b x + @c$. So we can use the chain rule as follows.
\begin{eqnarray*}
\frac{d}{dx}f(x) & = & \frac{d}{dx} \sin(@a x^2 + @b x + @c) \\
 & = & \cos(@a x^2 + @b x + @c) \cdot \frac{d}{dx}(@a x^2 + @b x + @c) \\
 & = & \boxed{\cos(@a x^2 + @b x + @c)([:int: 2*@a :]x + @b).}
\end{eqnarray*}
] else []
endif]

  ]; bool @show.solution := #f
)]#
