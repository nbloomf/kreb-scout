[define >doc @poly.long.division.1 := Macro(doc; [#

[define {int} @cs := Rand({{1;-1;2};{-2;1;3};{-2;2;1};{1;1;-2}})]#

[define ^int @a := FromRoots(x; @cs ++ {1;1})]#
[define ^int @b := FromRoots(x; @cs)]#

Using polynomial long division, find the quotient and remainder when \#[ a(x) = [:str: Format(^int; latex; @a) :] \#] is divided by \#[ b(x) = [:str: Format(^int; latex; @b) :]. \#]#

  ]
)]#



[define >doc @poly.synth.division.1 := Macro(doc; [#

[define {int} @cs := Rand({{1;-1;2;3;1};{-2;1;-2;1;3};{1;-1;-2;2;1};{-1;3;1;1;-2}})]#

[define ^int @a := FromRoots(x; @cs)]#
[define ^int @b := FromRoots(x; {Rand(@cs)})]#

Use synthetic division to find the quotient and remainder when \#[ a(x) = [:str: Format(^int; latex; @a) :] \#] is divided by $b(x) = [:str: Format(^int; latex; @b) :]$.#

  ]
)]#
